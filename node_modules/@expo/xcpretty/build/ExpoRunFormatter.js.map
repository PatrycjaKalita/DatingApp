{"version":3,"file":"ExpoRunFormatter.js","sourceRoot":"","sources":["../src/ExpoRunFormatter.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAC1B,gDAAwB;AAExB,2CAAuD;AACvD,+CAA4C;AAC5C,2FAAwF;AACxF,iEAA8D;AAC9D,yEAAsE;AACtE,6CAAwC;AASxC;;GAEG;AACH,MAAa,gBAAiB,SAAQ,qBAAS;IAkC7C,YAAmB,KAA4B;QAC7C,KAAK,CAAC,KAAK,CAAC,CAAC;QADI,UAAK,GAAL,KAAK,CAAuB;QAdvC,mBAAc,GAAwB,EAAE,CAAC;QAgB/C,IAAI,CAAC,iBAAiB,GAAG,cAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC/D,CAAC;IApCD,MAAM,CAAC,MAAM,CACX,WAAmB,EACnB,EACE,YAAY,EACZ,OAAO,MACyE,EAAE;;QAEpF,MAAM,WAAW,GAAG,cAAI,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;QAClE,MAAM,OAAO,GAAG,OAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,CAAC,KAAK,CAAC,eAAe,2CAAI,CAAC,MAAK,EAAE,CAAC;QACrE,MAAM,SAAS,GAAG,IAAI,gBAAgB,CAAC;YACrC,WAAW;YACX,OAAO;YACP,OAAO,EAAE,+DAA8B,CAAC,WAAW,CAAC;YACpD,OAAO;SACR,CAAC,CAAC;QAEH,OAAO,SAAS,CAAC;IACnB,CAAC;IAQD,IAAI,MAAM;QACR,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,yBAAW,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAOD,+BAA+B,CAAC,aAAqB;QACnD,MAAM,OAAO,GAAG,KAAK,eAAK,CAAC,GAAG,CAC5B,eAAK;YACH,8BAA8B;YAC9B,+BAA+B;YAC/B,aAAa,CAChB,IAAI,CAAC;QACN,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,wBAAwB,CAAC,QAAgB,EAAE,UAAmB,EAAE,YAAqB;QACnF,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC7E,CAAC;IAED,mBAAmB,CAAC,KAAoB;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACrD,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACpE,OAAO,qBAAS,CAAC,MAAM,CACrB,KAAK,EACL,CAAC,aAAa,EAAE,qBAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;aACrF,MAAM,CAAC,OAAO,CAAC;aACf,IAAI,CAAC,GAAG,CAAC,CACb,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,UAAkB,EAAE,MAAe,EAAE,OAAgB;QAC9E,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QAElD,IAAI,UAAU,KAAK,gBAAgB,EAAE;YACnC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,MAAM,CAAC;YAClD,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YAChE,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,oBAAoB,IAAI,EAAE,CAAC;YACpE,oFAAoF;YACpF,IAAI,UAAU,EAAE;gBACd,UAAU,GAAG,eAAK,CAAC,IAAI,CAAC,GAAG,UAAU,aAAa,CAAC,CAAC;aACrD;iBAAM;gBACL,UAAU,GAAG,UAAU,GAAG,eAAK,CAAC,IAAI,CAAC,OAAO,MAAM,EAAE,CAAC,CAAC;aACvD;SACF;QAED,OAAO,qBAAS,CAAC,MAAM,CACrB,WAAW,EACX,CAAC,aAAa,EAAE,qBAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;aACrE,MAAM,CAAC,OAAO,CAAC;aACf,IAAI,CAAC,GAAG,CAAC,CACb,CAAC;IACJ,CAAC;IAEO,UAAU,CAAC,QAAgB,EAAE,MAAe;QAClD,IAAI,UAAU,GAAG,qCAAiB,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,CAAC,UAAU,EAAE;YACf,IACE,IAAI,CAAC,KAAK,CAAC,OAAO;gBAClB,CAAC,MAAM,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,MAAM,KAAK,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAC1E;gBACA,UAAU,GAAG,EAAE,CAAC;aACjB;iBAAM,IAAI,MAAM,IAAI,MAAM,IAAI,aAAa,EAAE;gBAC5C,UAAU,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;aACpC;iBAAM;gBACL,MAAM,GAAG,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;gBAC/C,IAAI,GAAG,EAAE;oBACP,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC;iBACvB;aACF;SACF;QACD,OAAO,UAAU,CAAC,CAAC,CAAC,eAAK,CAAC,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACzD,CAAC;IAEO,UAAU;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;IAClC,CAAC;IAEO,qBAAqB,CAAC,OAAgB;;QAC5C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,IAAI,CAAC;SACb;QAED,IAAI,OAAO,IAAI,IAAI,CAAC,cAAc,EAAE;YAClC,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;SACrC;QAED,MAAM,QAAQ,SAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,mCAAI,IAAI,CAAC;QAC5E,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QAED,MAAM,GAAG,GAAG,6CAAqB,CAAC,cAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,QAAkB,CAAC,CAAC,CAAC;QACzF,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC;SACpC;QACD,OAAO,GAAG,aAAH,GAAG,cAAH,GAAG,GAAI,IAAI,CAAC;IACrB,CAAC;CACF;AAvID,4CAuIC;AAED,oEAAoE;AACpE,MAAM,aAAa,GAA2B;IAC5C,4CAA4C;IAC5C,mCAAmC,EAAE,cAAc;IACnD,OAAO,EAAE,cAAc;IACvB,UAAU;IACV,0BAA0B,EAAE,cAAc;IAC1C,eAAe,EAAE,cAAc;IAC/B,mBAAmB,EAAE,cAAc;IACnC,UAAU,EAAE,cAAc;IAC1B,OAAO,EAAE,cAAc;IACvB,iBAAiB,EAAE,cAAc;CAClC,CAAC;AAEF,SAAS,QAAQ,CAAC,KAAU;IAC1B,OAAO,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,GAAG,CAAC;AAC1D,CAAC","sourcesContent":["import chalk from 'chalk';\nimport path from 'path';\n\nimport { FileOperation, Formatter } from './Formatter';\nimport { MetroParser } from './MetroParser';\nimport { getDependenciesFromPodfileLock } from './utils/getDependenciesFromPodfileLock';\nimport { getNodeModuleName } from './utils/getNodeModuleName';\nimport { getPackageJsonForPath } from './utils/getPackageJsonForPath';\nimport { ERROR } from './utils/symbols';\n\nexport type ExpoRunFormatterProps = {\n  projectRoot: string;\n  podfile?: Record<string, Record<string, string>>;\n  appName?: string;\n  isDebug?: boolean;\n};\n\n/**\n * A superset of `Formatter` which adds support for Metro build errors and cleaner formatting for Node projects.\n */\nexport class ExpoRunFormatter extends Formatter {\n  static create(\n    projectRoot: string,\n    {\n      xcodeProject,\n      isDebug,\n    }: { xcodeProject?: { name: string } } & Pick<ExpoRunFormatterProps, 'isDebug'> = {}\n  ) {\n    const podfileLock = path.join(projectRoot, 'ios', 'Podfile.lock');\n    const appName = xcodeProject?.name.match(/.*\\/(.*)\\.\\w+/)?.[1] || '';\n    const formatter = new ExpoRunFormatter({\n      projectRoot,\n      appName,\n      podfile: getDependenciesFromPodfileLock(podfileLock),\n      isDebug,\n    });\n\n    return formatter;\n  }\n\n  private cachedPackages: Record<string, any> = {};\n\n  private nativeProjectRoot: string;\n\n  _parser: MetroParser | undefined;\n\n  get parser(): MetroParser {\n    if (this._parser) {\n      return this._parser;\n    }\n    this._parser = new MetroParser(this);\n    return this._parser;\n  }\n\n  constructor(public props: ExpoRunFormatterProps) {\n    super(props);\n    this.nativeProjectRoot = path.join(props.projectRoot, 'ios');\n  }\n\n  formatMetroAssetCollectionError(errorContents: string): string {\n    const results = `\\n${chalk.red(\n      ERROR +\n        // Provide proper attribution.\n        'Metro encountered an error:\\n' +\n        errorContents\n    )}\\n`;\n    this.errors.push(results);\n    return results;\n  }\n\n  shouldShowCompileWarning(filePath: string, lineNumber?: string, columnNumber?: string): boolean {\n    if (this.props.isDebug) {\n      return true;\n    }\n    return !filePath.match(/node_modules/) && !filePath.match(/\\/ios\\/Pods\\//);\n  }\n\n  formatFileOperation(props: FileOperation): string {\n    const title = this.getFileOperationTitle(props.type);\n    const moduleNameTag = this.getPkgName(props.filePath, props.target);\n    return Formatter.format(\n      title,\n      [moduleNameTag, Formatter.formatBreadCrumb(props.fileName, props.target, props.project)]\n        .filter(Boolean)\n        .join(' ')\n    );\n  }\n\n  formatPhaseScriptExecution(scriptName: string, target?: string, project?: string): string {\n    const moduleNameTag = this.getPkgName('', target);\n\n    if (scriptName === 'Start Packager') {\n      const port = process.env.RCT_METRO_PORT || '8081';\n      const isDisabled = isTruthy(process.env.RCT_NO_LAUNCH_PACKAGER);\n      const status = isDisabled ? 'disabled' : `http://localhost:${port}`;\n      // Add some insight into if the bundler was started or not, and which port was used.\n      if (isDisabled) {\n        scriptName = chalk.gray(`${scriptName} (disabled)`);\n      } else {\n        scriptName = scriptName + chalk.gray(` on ${status}`);\n      }\n    }\n\n    return Formatter.format(\n      'Executing',\n      [moduleNameTag, Formatter.formatBreadCrumb(scriptName, target, project)]\n        .filter(Boolean)\n        .join(' ')\n    );\n  }\n\n  private getPkgName(filePath: string, target?: string): string | null {\n    let moduleName = getNodeModuleName(filePath);\n    if (!moduleName) {\n      if (\n        this.props.appName &&\n        (target === this.props.appName || target === `Pods-${this.props.appName}`)\n      ) {\n        moduleName = '';\n      } else if (target && target in knownPackages) {\n        moduleName = knownPackages[target];\n      } else {\n        const pkg = this.packageJsonForProject(target);\n        if (pkg) {\n          moduleName = pkg.name;\n        }\n      }\n    }\n    return moduleName ? chalk.cyan(`${moduleName}`) : null;\n  }\n\n  private getPodfile() {\n    return this.props.podfile || {};\n  }\n\n  private packageJsonForProject(project?: string): any {\n    if (!project) {\n      return null;\n    }\n\n    if (project in this.cachedPackages) {\n      return this.cachedPackages[project];\n    }\n\n    const filePath = Object.values(this.getPodfile()[project] || {})[0] ?? null;\n    if (!filePath) {\n      return null;\n    }\n\n    const pkg = getPackageJsonForPath(path.join(this.nativeProjectRoot, filePath as string));\n    if (pkg) {\n      this.cachedPackages[project] = pkg;\n    }\n    return pkg ?? null;\n  }\n}\n\n// A list of packages that aren't linked through cocoapods directly.\nconst knownPackages: Record<string, string> = {\n  // Added to ReactCore as a `resource_bundle`\n  'React-Core-AccessibilityResources': 'react-native',\n  YogaKit: 'react-native',\n  // flipper\n  'Flipper-DoubleConversion': 'react-native',\n  'Flipper-Folly': 'react-native',\n  'OpenSSL-Universal': 'react-native',\n  FlipperKit: 'react-native',\n  Flipper: 'react-native',\n  'Flipper-RSocket': 'react-native',\n};\n\nfunction isTruthy(value: any): boolean {\n  return value === 'true' || value === 1 || value === '1';\n}\n"]}