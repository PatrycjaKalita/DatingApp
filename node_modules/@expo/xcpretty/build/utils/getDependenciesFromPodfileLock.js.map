{"version":3,"file":"getDependenciesFromPodfileLock.js","sourceRoot":"","sources":["../../src/utils/getDependenciesFromPodfileLock.ts"],"names":[],"mappings":";;;;;;AAAA,4CAAoB;AACpB,qCAA+B;AAE/B,MAAM,oBAAoB,GAAG,kBAAkB,CAAC;AAEhD,SAAgB,8BAA8B,CAAC,eAAuB;IACpE,IAAI,WAAW,CAAC;IAChB,IAAI;QACF,WAAW,GAAG,YAAE,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;KACxD;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,EAAE,CAAC;KACX;IAED,4DAA4D;IAC5D,kCAAkC;IAClC,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAM,YAAY,GAAG,oBAAoB,GAAG,IAAI,CAAC;IAEjD,MAAM,QAAQ,GAAG,cAAI,CAAC,YAAY,CAAC,CAAC;IACpC,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;QAC7C,OAAO,EAAE,CAAC;KACX;IACD,OAAQ,QAAgB,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;AACvD,CAAC;AAlBD,wEAkBC","sourcesContent":["import fs from 'fs';\nimport { load } from 'js-yaml';\n\nconst EXTERNAL_SOURCES_KEY = 'EXTERNAL SOURCES';\n\nexport function getDependenciesFromPodfileLock(podfileLockPath: string) {\n  let fileContent;\n  try {\n    fileContent = fs.readFileSync(podfileLockPath, 'utf8');\n  } catch (err) {\n    return {};\n  }\n\n  // Previous portions of the lock file could be invalid yaml.\n  // Only parse parts that are valid\n  const tail = fileContent.split(EXTERNAL_SOURCES_KEY).slice(1);\n  const checksumTail = EXTERNAL_SOURCES_KEY + tail;\n\n  const contents = load(checksumTail);\n  if (!contents || typeof contents !== 'object') {\n    return {};\n  }\n  return (contents as any)[EXTERNAL_SOURCES_KEY] || {};\n}\n"]}