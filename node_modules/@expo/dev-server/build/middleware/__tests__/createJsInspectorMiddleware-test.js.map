{"version":3,"file":"createJsInspectorMiddleware-test.js","sourceRoot":"","sources":["../../../src/middleware/__tests__/createJsInspectorMiddleware-test.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChildProcess } from 'child_process';\nimport type { IncomingMessage, ServerResponse } from 'http';\nimport type { Socket } from 'net';\nimport fetch from 'node-fetch';\nimport open from 'open';\nimport { URL } from 'url';\n\nimport createJsInspectorMiddleware from '../createJsInspectorMiddleware';\n\njest.mock('fs-extra');\njest.mock('node-fetch');\njest.mock('open');\njest.mock('rimraf');\njest.mock('temp-dir', () => '/tmp');\n\nconst { Response } = jest.requireActual('node-fetch');\n\ndescribe('createJsInspectorMiddleware', () => {\n  it('should return specific app entity for GET request with given applicationId', async () => {\n    const appId = 'io.expo.test.devclient';\n    const entities = JSON.parse(RESPONSE_FIXTURE) as { [key: string]: string }[];\n    const entity = entities.find(object => object.description === appId);\n\n    const req = createRequest(`http://localhost:8081/inspector?applicationId=${appId}`);\n    const res = createMockedResponse();\n    const next = jest.fn();\n    const mockFetch = fetch as jest.MockedFunction<typeof fetch>;\n    mockFetch.mockReturnValue(Promise.resolve(new Response(RESPONSE_FIXTURE)));\n\n    const middlewareAsync = createJsInspectorMiddleware();\n    await middlewareAsync(req, res as ServerResponse, next);\n\n    expectMockedResponse(res, 200, JSON.stringify(entity));\n  });\n\n  it('should handle ipv6 address', async () => {\n    const appId = 'io.expo.test.devclient';\n    const entities = JSON.parse(RESPONSE_FIXTURE) as { [key: string]: string }[];\n    const entity = entities.find(object => object.description === appId);\n\n    const req = createRequest(`http://[::ffff:127.0.0.1]/inspector?applicationId=${appId}`);\n    const res = createMockedResponse();\n    const next = jest.fn();\n    const mockFetch = fetch as jest.MockedFunction<typeof fetch>;\n    mockFetch.mockReturnValue(Promise.resolve(new Response(RESPONSE_FIXTURE)));\n\n    const middlewareAsync = createJsInspectorMiddleware();\n    await middlewareAsync(req, res as ServerResponse, next);\n\n    expectMockedResponse(res, 200, JSON.stringify(entity));\n  });\n\n  it('should return 404 for GET request with nonexistent applicationId', async () => {\n    const req = createRequest('http://localhost:8081/inspector?applicationId=nonExistentApp');\n    const res = createMockedResponse();\n    const next = jest.fn();\n    const mockFetch = fetch as jest.MockedFunction<typeof fetch>;\n    mockFetch.mockReturnValue(Promise.resolve(new Response(RESPONSE_FIXTURE)));\n\n    const middlewareAsync = createJsInspectorMiddleware();\n    await middlewareAsync(req, res as ServerResponse, next);\n\n    expectMockedResponse(res, 404);\n  });\n\n  it('should return 400 for GET request without parameters', async () => {\n    const req = createRequest('http://localhost:8081/inspector');\n    const res = createMockedResponse();\n    const next = jest.fn();\n    const mockFetch = fetch as jest.MockedFunction<typeof fetch>;\n    mockFetch.mockReturnValue(Promise.resolve(new Response(RESPONSE_FIXTURE)));\n\n    const middlewareAsync = createJsInspectorMiddleware();\n    await middlewareAsync(req, res as ServerResponse, next);\n\n    expectMockedResponse(res, 400);\n  });\n\n  it('should open browser for PUT request with given applicationId', async () => {\n    const appId = 'io.expo.test.devclient';\n    const req = createRequest(`http://localhost:8081/inspector?applicationId=${appId}`, 'PUT');\n    const res = createMockedResponse();\n    const next = jest.fn();\n    const mockFetch = fetch as jest.MockedFunction<typeof fetch>;\n    mockFetch.mockReturnValue(Promise.resolve(new Response(RESPONSE_FIXTURE)));\n\n    const mockOpen = open as jest.MockedFunction<typeof open>;\n    mockOpen.mockImplementation(\n      (target: string): Promise<ChildProcess> => {\n        expect(target).toMatch(\n          /^https:\\/\\/chrome-devtools-frontend\\.appspot\\.com\\/serve_rev\\/@.+\\/inspector.html/\n        );\n        const result: Partial<ChildProcess> = { exitCode: 0 };\n        return Promise.resolve(result as ChildProcess);\n      }\n    );\n\n    const middlewareAsync = createJsInspectorMiddleware();\n    await middlewareAsync(req, res as ServerResponse, next);\n\n    expectMockedResponse(res, 200);\n  });\n\n  const RESPONSE_FIXTURE = JSON.stringify([\n    {\n      description: 'io.expo.test.devclient',\n      devtoolsFrontendUrl:\n        'chrome-devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=%5B%3A%3A%5D%3A8081%2Finspector%2Fdebug%3Fdevice%3D0%26page%3D3',\n      faviconUrl: 'https://reactjs.org/favicon.ico',\n      id: '0-3',\n      title: 'Hermes React Native',\n      type: 'node',\n      vm: 'Hermes',\n      webSocketDebuggerUrl: 'ws://[::]:8081/inspector/debug?device=0&page=3',\n    },\n    {\n      description: \"don't use\",\n      devtoolsFrontendUrl:\n        'chrome-devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=%5B%3A%3A%5D%3A8081%2Finspector%2Fdebug%3Fdevice%3D0%26page%3D-1',\n      faviconUrl: 'https://reactjs.org/favicon.ico',\n      id: '0--1',\n      title: 'React Native Experimental (Improved Chrome Reloads)',\n      type: 'node',\n      vm: \"don't use\",\n      webSocketDebuggerUrl: 'ws://[::]:8081/inspector/debug?device=0&page=-1',\n    },\n    {\n      description: 'io.expo.test.hermes',\n      devtoolsFrontendUrl:\n        'chrome-devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=%5B%3A%3A%5D%3A8081%2Finspector%2Fdebug%3Fdevice%3D1%26page%3D1',\n      faviconUrl: 'https://reactjs.org/favicon.ico',\n      id: '1-1',\n      title: 'Hermes React Native',\n      type: 'node',\n      vm: 'Hermes',\n      webSocketDebuggerUrl: 'ws://[::]:8081/inspector/debug?device=1&page=1',\n    },\n    {\n      description: \"don't use\",\n      devtoolsFrontendUrl:\n        'chrome-devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=%5B%3A%3A%5D%3A8081%2Finspector%2Fdebug%3Fdevice%3D1%26page%3D-1',\n      faviconUrl: 'https://reactjs.org/favicon.ico',\n      id: '1--1',\n      title: 'React Native Experimental (Improved Chrome Reloads)',\n      type: 'node',\n      vm: \"don't use\",\n      webSocketDebuggerUrl: 'ws://[::]:8081/inspector/debug?device=1&page=-1',\n    },\n  ]);\n});\n\nfunction createRequest(requestUrl: string, method?: 'GET' | 'POST' | 'PUT'): IncomingMessage {\n  const url = new URL(requestUrl);\n  const req: Partial<IncomingMessage> = {\n    method: method || 'GET',\n    headers: {\n      host: url.host,\n    },\n    socket: {\n      localAddress: url.hostname,\n      localPort: Number(url.port || 80),\n    } as Socket,\n    url: `${url.pathname}${url.search}`,\n  };\n  return req as IncomingMessage;\n}\n\ninterface MockedResponse extends Partial<ServerResponse> {\n  end: jest.Mock;\n  writeHead: jest.Mock;\n  write: jest.Mock;\n}\n\nfunction createMockedResponse(): MockedResponse {\n  return {\n    end: jest.fn(),\n    writeHead: jest.fn().mockReturnThis(),\n    write: jest.fn().mockReturnThis(),\n  };\n}\n\nfunction expectMockedResponse(res: MockedResponse, status: number, body?: string) {\n  if (status !== 200) {\n    expect(res.writeHead.mock.calls[0][0]).toBe(status);\n  }\n  if (body) {\n    expect(res.end.mock.calls[0][0]).toBe(body);\n  }\n}\n"]}