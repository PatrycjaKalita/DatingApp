{"version":3,"sources":["../../src/project/publishAsync.ts"],"names":["publishAsync","projectRoot","options","target","user","UserManager","ensureLoggedInAsync","Env","isDebug","console","log","Analytics","logEvent","developerTool","Config","validationStatus","Doctor","validateWithNetworkAsync","ERROR","FATAL","XDLError","exp","pkg","hooks","validPostPublishHooks","bundles","useDevServer","shouldUseDevServer","ProjectAssets","publishAssetsAsync","androidBundle","android","hermesBytecodeBundle","code","iosBundle","ios","hasHooks","length","androidSourceMap","hermesSourcemap","map","iosSourceMap","response","_uploadArtifactsAsync","e","serverError","Error","Sentry","captureException","androidManifest","iosManifest","publishManifestPath","EmbeddedAssets","shouldEmbedAssetsForExpoUpdates","sdkOrRuntimeVersion","runtimeVersion","sdkVersion","Promise","all","ExponentTools","getManifestAsync","url","releaseChannel","Accept","hookOptions","msg","logger","global","info","quiet","hook","file","warn","stack","fullManifestUrl","replace","configureAsync","iosManifestUrl","androidManifestUrl","isKernel","_handleKernelPublishedAsync","projectPageUrl","formData","FormData","append","JSON","stringify","api","ApiV2","clientForUser","uploadFormDataAsync","owner","kind","username","kernelBundleUrl","scheme","host","port","slug","kernel","androidManifestPath","manifest","bundleUrl","fs","writeFile","path","resolve","iosManifestPath"],"mappings":"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","sourcesContent":["import {\n  ExpoAppManifest,\n  ExpoConfig,\n  getDefaultTarget,\n  HookArguments,\n  PackageJSONConfig,\n} from '@expo/config';\nimport FormData from 'form-data';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport { RobotUser } from '../User';\nimport {\n  Analytics,\n  ApiV2,\n  Config,\n  createBundlesAsync,\n  Doctor,\n  EmbeddedAssets,\n  Env,\n  ExponentTools,\n  getPublishExpConfigAsync,\n  LoadedHook,\n  Logger as logger,\n  prepareHooks,\n  printBundleSizes,\n  ProjectAssets,\n  PublishOptions,\n  runHook,\n  Sentry,\n  User,\n  UserManager,\n  XDLError,\n} from '../internal';\n\nexport interface PublishedProjectResult {\n  /**\n   * Project manifest URL\n   */\n  url: string;\n  /**\n   * Project page URL\n   */\n  projectPageUrl: string;\n  /**\n   * TODO: What is this?\n   */\n  ids: string[];\n  /**\n   * TODO: What is this? Where does it come from?\n   */\n  err?: string;\n}\n\nexport async function publishAsync(\n  projectRoot: string,\n  options: PublishOptions = {}\n): Promise<PublishedProjectResult> {\n  options.target = options.target ?? getDefaultTarget(projectRoot);\n  const target = options.target;\n  const user = await UserManager.ensureLoggedInAsync();\n\n  if (Env.isDebug()) {\n    console.log();\n    console.log('Publish Assets:');\n    console.log(`- Asset target: ${target}`);\n    console.log();\n  }\n\n  Analytics.logEvent('Publish', {\n    projectRoot,\n    developerTool: Config.developerTool,\n  });\n\n  const validationStatus = await Doctor.validateWithNetworkAsync(projectRoot);\n  if (validationStatus === Doctor.ERROR || validationStatus === Doctor.FATAL) {\n    throw new XDLError(\n      'PUBLISH_VALIDATION_ERROR',\n      \"Couldn't publish because errors were found. (See logs above.) Please fix the errors and try again.\"\n    );\n  }\n\n  // Get project config\n  const { exp, pkg, hooks } = await getPublishExpConfigAsync(projectRoot, options);\n\n  // TODO: refactor this out to a function, throw error if length doesn't match\n  const validPostPublishHooks: LoadedHook[] = prepareHooks(hooks, 'postPublish', projectRoot);\n  const bundles = await createBundlesAsync(projectRoot, options, {\n    useDevServer: Env.shouldUseDevServer(exp),\n  });\n\n  printBundleSizes(bundles);\n\n  await ProjectAssets.publishAssetsAsync({ projectRoot, exp, bundles });\n\n  const androidBundle = bundles.android.hermesBytecodeBundle ?? bundles.android.code;\n  const iosBundle = bundles.ios.hermesBytecodeBundle ?? bundles.ios.code;\n\n  const hasHooks = validPostPublishHooks.length > 0;\n\n  const androidSourceMap = hasHooks ? bundles.android.hermesSourcemap ?? bundles.android.map : null;\n  const iosSourceMap = hasHooks ? bundles.ios.hermesSourcemap ?? bundles.ios.map : null;\n\n  let response;\n  try {\n    response = await _uploadArtifactsAsync({\n      pkg,\n      exp,\n      iosBundle,\n      androidBundle,\n      options,\n    });\n  } catch (e) {\n    if (e.serverError === 'SCHEMA_VALIDATION_ERROR') {\n      throw new Error(\n        `There was an error validating your project schema. Check for any warnings about the contents of your app.json or app.config.js.`\n      );\n    }\n    Sentry.captureException(e);\n    throw e;\n  }\n\n  let androidManifest = {};\n  let iosManifest = {};\n\n  if (\n    validPostPublishHooks.length ||\n    exp.ios?.publishManifestPath ||\n    exp.android?.publishManifestPath ||\n    EmbeddedAssets.shouldEmbedAssetsForExpoUpdates(projectRoot, exp, pkg, target)\n  ) {\n    const sdkOrRuntimeVersion = exp.runtimeVersion\n      ? {\n          'expo-runtime-version': exp.runtimeVersion,\n        }\n      : { 'expo-sdk-version': exp.sdkVersion };\n\n    [androidManifest, iosManifest] = await Promise.all([\n      ExponentTools.getManifestAsync(response.url, {\n        ...sdkOrRuntimeVersion,\n        'Exponent-Platform': 'android',\n        'Expo-Release-Channel': options.releaseChannel,\n        Accept: 'application/expo+json,application/json',\n      }),\n      ExponentTools.getManifestAsync(response.url, {\n        ...sdkOrRuntimeVersion,\n        'Exponent-Platform': 'ios',\n        'Expo-Release-Channel': options.releaseChannel,\n        Accept: 'application/expo+json,application/json',\n      }),\n    ]);\n\n    const hookOptions: Omit<HookArguments, 'config'> = {\n      url: response.url,\n      exp,\n      iosBundle,\n      iosSourceMap,\n      iosManifest,\n      androidBundle,\n      androidSourceMap,\n      androidManifest,\n      projectRoot,\n      log: (msg: any) => {\n        logger.global.info({ quiet: true }, msg);\n      },\n    };\n\n    for (const hook of validPostPublishHooks) {\n      logger.global.info(`Running postPublish hook: ${hook.file}`);\n      try {\n        runHook(hook, hookOptions);\n      } catch (e) {\n        logger.global.warn(`Warning: postPublish hook '${hook.file}' failed: ${e.stack}`);\n      }\n    }\n  }\n\n  const fullManifestUrl = response.url.replace('exp://', 'https://');\n  await EmbeddedAssets.configureAsync({\n    projectRoot,\n    pkg,\n    exp,\n    releaseChannel: options.releaseChannel ?? 'default',\n    iosManifestUrl: fullManifestUrl,\n    iosManifest,\n    iosBundle,\n    androidManifestUrl: fullManifestUrl,\n    androidManifest,\n    androidBundle,\n    target,\n  });\n\n  // TODO: move to postPublish hook\n  if (exp.isKernel) {\n    await _handleKernelPublishedAsync({\n      user,\n      exp,\n      projectRoot,\n      url: response.url,\n    });\n  }\n\n  // Create project manifest URL\n  const url =\n    options.releaseChannel && options.releaseChannel !== 'default'\n      ? `${response.url}?release-channel=${options.releaseChannel}`\n      : response.url;\n\n  // Create project page URL\n  const projectPageUrl = response.projectPageUrl\n    ? options.releaseChannel && options.releaseChannel !== 'default'\n      ? `${response.projectPageUrl}?release-channel=${options.releaseChannel}`\n      : response.projectPageUrl\n    : null;\n\n  return {\n    ...response,\n    url,\n    projectPageUrl,\n  };\n}\n\nasync function _uploadArtifactsAsync({\n  exp,\n  iosBundle,\n  androidBundle,\n  options,\n  pkg,\n}: {\n  exp: ExpoConfig;\n  iosBundle: string | Uint8Array;\n  androidBundle: string | Uint8Array;\n  options: PublishOptions;\n  pkg: PackageJSONConfig;\n}) {\n  logger.global.info('');\n  logger.global.info('Uploading JavaScript bundles');\n  const formData = new FormData();\n\n  formData.append('expJson', JSON.stringify(exp));\n  formData.append('packageJson', JSON.stringify(pkg));\n  formData.append('iosBundle', iosBundle, 'iosBundle');\n  formData.append('androidBundle', androidBundle, 'androidBundle');\n  formData.append('options', JSON.stringify(options));\n\n  const user = await UserManager.ensureLoggedInAsync();\n  const api = ApiV2.clientForUser(user);\n\n  return await api.uploadFormDataAsync('publish/new', formData);\n}\n\nasync function _handleKernelPublishedAsync({\n  projectRoot,\n  user,\n  exp,\n  url,\n}: {\n  projectRoot: string;\n  user: User | RobotUser;\n  exp: ExpoAppManifest;\n  url: string;\n}) {\n  let owner = exp.owner;\n  if (!owner) {\n    if (user.kind !== 'user') {\n      throw new XDLError(\n        'ROBOT_ACCOUNT_ERROR',\n        'Kernel builds are not available for robot users when owner app.json field is not supplied'\n      );\n    }\n    owner = user.username;\n  }\n\n  let kernelBundleUrl = `${Config.api.scheme}://${Config.api.host}`;\n  if (Config.api.port) {\n    kernelBundleUrl = `${kernelBundleUrl}:${Config.api.port}`;\n  }\n  kernelBundleUrl = `${kernelBundleUrl}/@${owner}/${exp.slug}/bundle`;\n  const sdkOrRuntimeVersion = exp.runtimeVersion\n    ? {\n        'expo-runtime-version': exp.runtimeVersion,\n      }\n    : { 'expo-sdk-version': exp.sdkVersion };\n\n  if (exp.kernel?.androidManifestPath) {\n    const manifest = await ExponentTools.getManifestAsync(url, {\n      ...sdkOrRuntimeVersion,\n      'Exponent-Platform': 'android',\n      Accept: 'application/expo+json,application/json',\n    });\n    manifest.bundleUrl = kernelBundleUrl;\n    manifest.sdkVersion = 'UNVERSIONED';\n    await fs.writeFile(\n      path.resolve(projectRoot, exp.kernel.androidManifestPath),\n      JSON.stringify(manifest)\n    );\n  }\n\n  if (exp.kernel?.iosManifestPath) {\n    const manifest = await ExponentTools.getManifestAsync(url, {\n      ...sdkOrRuntimeVersion,\n      'Exponent-Platform': 'ios',\n      Accept: 'application/expo+json,application/json',\n    });\n    manifest.bundleUrl = kernelBundleUrl;\n    manifest.sdkVersion = 'UNVERSIONED';\n    await fs.writeFile(\n      path.resolve(projectRoot, exp.kernel.iosManifestPath),\n      JSON.stringify(manifest)\n    );\n  }\n}\n"],"file":"publishAsync.js"}