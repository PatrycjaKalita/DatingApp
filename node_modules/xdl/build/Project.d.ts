import { startExpoServerAsync, StartOptions, startReactNativeServerAsync, startTunnelsAsync, stopReactNativeServerAsync, stopTunnelsAsync } from './internal';
/**
 * @deprecated Use `ProjectSettings.setPackagerInfoAsync`
 * @param projectRoot
 * @param options
 */
export declare function setOptionsAsync(projectRoot: string, options: {
    packagerPort?: number;
}): Promise<void>;
/**
 * @deprecated `ProjectSettings.getCurrentStatusAsync`
 * @param projectRoot
 */
export declare function currentStatus(projectRoot: string): Promise<"running" | "ill" | "exited">;
export { startTunnelsAsync, stopTunnelsAsync, startExpoServerAsync, StartOptions, startReactNativeServerAsync, stopReactNativeServerAsync, };
export { broadcastMessage, createBundlesAsync, getPublishExpConfigAsync, prepareHooks, publishAsync, PublishedProjectResult, PublishOptions, runHook, startAsync, stopAsync, writeArtifactSafelyAsync, } from './internal';
