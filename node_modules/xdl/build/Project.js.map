{"version":3,"sources":["../src/Project.ts"],"names":["setOptionsAsync","projectRoot","options","packagerPort","Number","isInteger","XDLError","ProjectSettings","setPackagerInfoAsync","currentStatus","getCurrentStatusAsync"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAYA;AACA;AACA;AACA;AACA;AACO,eAAeA,eAAf,CACLC,WADK,EAELC,OAFK,EAKU;AACf,0CAAuBD,WAAvB,EADe,CACsB;;AACrC,MAAIC,OAAO,CAACC,YAAR,IAAwB,IAAxB,IAAgC,CAACC,MAAM,CAACC,SAAP,CAAiBH,OAAO,CAACC,YAAzB,CAArC,EAA6E;AAC3E,UAAM,KAAIG,oBAAJ,EAAa,iBAAb,EAAgC,iCAAhC,CAAN;AACD;;AACD,QAAMC,4BAAgBC,oBAAhB,CAAqCP,WAArC,EAAkDC,OAAlD,CAAN;AACD;AAED;AACA;AACA;AACA;;;AACO,eAAeO,aAAf,CAA6BR,WAA7B,EAAkD;AACvD,SAAOM,4BAAgBG,qBAAhB,CAAsCT,WAAtC,CAAP;AACD","sourcesContent":["import {\n  assertValidProjectRoot,\n  ProjectSettings,\n  startExpoServerAsync,\n  StartOptions,\n  startReactNativeServerAsync,\n  startTunnelsAsync,\n  stopReactNativeServerAsync,\n  stopTunnelsAsync,\n  XDLError,\n} from './internal';\n\n/**\n * @deprecated Use `ProjectSettings.setPackagerInfoAsync`\n * @param projectRoot\n * @param options\n */\nexport async function setOptionsAsync(\n  projectRoot: string,\n  options: {\n    packagerPort?: number;\n  }\n): Promise<void> {\n  assertValidProjectRoot(projectRoot); // Check to make sure all options are valid\n  if (options.packagerPort != null && !Number.isInteger(options.packagerPort)) {\n    throw new XDLError('INVALID_OPTIONS', 'packagerPort must be an integer');\n  }\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, options);\n}\n\n/**\n * @deprecated `ProjectSettings.getCurrentStatusAsync`\n * @param projectRoot\n */\nexport async function currentStatus(projectRoot: string) {\n  return ProjectSettings.getCurrentStatusAsync(projectRoot);\n}\n\nexport {\n  startTunnelsAsync,\n  stopTunnelsAsync,\n  startExpoServerAsync,\n  StartOptions,\n  startReactNativeServerAsync,\n  stopReactNativeServerAsync,\n};\nexport {\n  broadcastMessage,\n  createBundlesAsync,\n  getPublishExpConfigAsync,\n  prepareHooks,\n  publishAsync,\n  PublishedProjectResult,\n  PublishOptions,\n  runHook,\n  startAsync,\n  stopAsync,\n  writeArtifactSafelyAsync,\n} from './internal';\n"],"file":"Project.js"}