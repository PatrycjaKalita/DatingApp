{"version":3,"sources":["../../../../src/commands/run/ios/startBundlerAsync.ts"],"names":["startBundlerAsync","projectRoot","metroPort","devClient","scheme","catch","ProjectSettings","setAsync","Project","startAsync","TerminalUI","isWebSocketsEnabled","isRemoteReloadingEnabled"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEO,eAAeA,iBAAf,CACLC,WADK,EAEL;AAAEC,EAAAA;AAAF,CAFK,EAGL;AACA;AACA,4CAAiBD,WAAjB,EAFA,CAGA;;AACA,QAAME,SAAS,GAAG,IAAlB;AACA,QAAMC,MAAM,GAAG,MAAM,wCAAwBH,WAAxB,EAAqCI,KAArC,CAA2C,MAAM,IAAjD,CAArB;AACA,QAAMC,uBAAgBC,QAAhB,CAAyBN,WAAzB,EAAsC;AAC1CE,IAAAA,SAD0C;AAE1CC,IAAAA;AAF0C,GAAtC,CAAN;AAIA,QAAMI,eAAQC,UAAR,CAAmBR,WAAnB,EAAgC;AAAEE,IAAAA,SAAF;AAAaD,IAAAA;AAAb,GAAhC,CAAN;AACA,QAAMQ,UAAU,GAACD,UAAX,CAAsBR,WAAtB,EAAmC;AACvCE,IAAAA,SADuC;AAEvC;AACAQ,IAAAA,mBAAmB,EAAE,IAHkB;AAIvCC,IAAAA,wBAAwB,EAAE;AAJa,GAAnC,CAAN;AAMD","sourcesContent":["import { Project, ProjectSettings } from 'xdl';\n\nimport { getDevClientSchemeAsync } from '../../../schemes';\nimport * as TerminalUI from '../../start/TerminalUI';\nimport { installExitHooks } from '../../start/installExitHooks';\n\nexport async function startBundlerAsync(\n  projectRoot: string,\n  { metroPort }: Pick<Project.StartOptions, 'metroPort'>\n) {\n  // Add clean up hooks\n  installExitHooks(projectRoot);\n  // This basically means don't use the Client app.\n  const devClient = true;\n  const scheme = await getDevClientSchemeAsync(projectRoot).catch(() => null);\n  await ProjectSettings.setAsync(projectRoot, {\n    devClient,\n    scheme,\n  });\n  await Project.startAsync(projectRoot, { devClient, metroPort });\n  await TerminalUI.startAsync(projectRoot, {\n    devClient,\n    // Enable controls\n    isWebSocketsEnabled: true,\n    isRemoteReloadingEnabled: true,\n  });\n}\n"],"file":"startBundlerAsync.js"}