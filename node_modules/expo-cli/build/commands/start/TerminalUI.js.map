{"version":3,"sources":["../../../src/commands/start/TerminalUI.ts"],"names":["CTRL_C","CTRL_D","CTRL_L","BLT","bold","b","italic","i","underline","u","chalk","printHelp","logCommandsTable","div","dim","shouldOpenDevToolsOnStartupAsync","UserSettings","getAsync","printUsageAsync","projectRoot","options","dev","ProjectSettings","readAsync","openDevToolsAtStartup","devMode","currentToggle","isMac","process","platform","isRemoteReloadingEnabled","isWebSocketsEnabled","printBasicUsageAsync","ui","Log","nested","filter","Boolean","map","key","message","status","view","length","join","printServerInfo","webOnly","Webpack","printConnectionInstructions","newLine","wrapLength","stdout","columns","item","text","trimStart","url","UrlUtils","constructDeepLinkAsync","urlOpts","printQRCode","addNewLineIfNone","openDeveloperTools","log","warn","startAsync","stdin","startWaitingForCommand","setRawMode","resume","setEncoding","on","handleKeypress","stopWaitingForCommand","removeListener","Prompts","addInteractionListener","pause","UserManager","setInteractiveAuthenticationCallback","shouldPrompt","nonInteractive","includes","clear","isTargetingNative","results","Android","openWebProjectAsync","success","nestedError","error","openProjectAsync","devClient","Simulator","emit","pauseInteractions","openAsync","devToolsPort","readPackagerInfoAsync","enabled","setAsync","Project","broadcastMessage","value","choices","title","name","resumeInteractions","projectSettings","minify","reset"],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport wrapAnsi from 'wrap-ansi';\nimport {\n  Android,\n  Project,\n  ProjectSettings,\n  Prompts,\n  Simulator,\n  UrlUtils,\n  UserManager,\n  UserSettings,\n  Webpack,\n} from 'xdl';\n\nimport { loginOrRegisterIfLoggedOutAsync } from '../../accounts';\nimport Log from '../../log';\nimport { selectAsync } from '../../prompts';\nimport urlOpts from '../../urlOpts';\nimport { openInEditorAsync } from '../utils/openInEditorAsync';\n\nconst CTRL_C = '\\u0003';\nconst CTRL_D = '\\u0004';\nconst CTRL_L = '\\u000C';\n\nconst BLT = `\\u203A`;\nconst { bold: b, italic: i, underline: u } = chalk;\n\ntype StartOptions = {\n  isWebSocketsEnabled?: boolean;\n  isRemoteReloadingEnabled?: boolean;\n  devClient?: boolean;\n  reset?: boolean;\n  nonInteractive?: boolean;\n  nonPersistent?: boolean;\n  maxWorkers?: number;\n  webOnly?: boolean;\n};\n\nconst printHelp = (): void => {\n  logCommandsTable([['?', 'show all commands']]);\n};\n\nconst div = chalk.dim(`│`);\n\nexport async function shouldOpenDevToolsOnStartupAsync() {\n  return UserSettings.getAsync(\n    'openDevToolsAtStartup',\n    // Defaults to true for new users.\n    // TODO: switch this to false.\n    true\n  );\n}\n\nconst printUsageAsync = async (\n  projectRoot: string,\n  options: Pick<\n    StartOptions,\n    'webOnly' | 'devClient' | 'isWebSocketsEnabled' | 'isRemoteReloadingEnabled'\n  > = {}\n) => {\n  const { dev } = await ProjectSettings.readAsync(projectRoot);\n  const openDevToolsAtStartup = await shouldOpenDevToolsOnStartupAsync();\n  const devMode = dev ? 'development' : 'production';\n  const currentToggle = openDevToolsAtStartup ? 'enabled' : 'disabled';\n\n  const isMac = process.platform === 'darwin';\n\n  logCommandsTable([\n    [],\n    ['a', `open Android`],\n    ['shift+a', `select a device or emulator`],\n    isMac && ['i', `open iOS simulator`],\n    isMac && ['shift+i', `select a simulator`],\n    ['w', `open web`],\n    [],\n    !!options.isRemoteReloadingEnabled && ['r', `reload app`],\n    !!options.isWebSocketsEnabled && ['m', `toggle menu`],\n    !!options.isWebSocketsEnabled && ['shift+m', `more tools`],\n    ['o', `open project code in your editor`],\n    ['c', `show project QR`],\n    ['p', `toggle build mode`, devMode],\n    // TODO: Drop with SDK 40\n    !options.isRemoteReloadingEnabled && ['r', `restart bundler`],\n    !options.isRemoteReloadingEnabled && ['shift+r', `restart and clear cache`],\n    [],\n    ['d', `show developer tools`],\n    ['shift+d', `toggle auto opening developer tools on startup`, currentToggle],\n    [],\n  ]);\n};\n\nconst printBasicUsageAsync = async (\n  options: Pick<StartOptions, 'webOnly' | 'isWebSocketsEnabled' | 'isRemoteReloadingEnabled'> = {}\n) => {\n  const isMac = process.platform === 'darwin';\n  const openDevToolsAtStartup = await shouldOpenDevToolsOnStartupAsync();\n  const currentToggle = openDevToolsAtStartup ? 'enabled' : 'disabled';\n\n  logCommandsTable([\n    [],\n    ['a', `open Android`],\n    isMac && ['i', `open iOS simulator`],\n    ['w', `open web`],\n    [],\n    !!options.isRemoteReloadingEnabled && ['r', `reload app`],\n    !!options.isWebSocketsEnabled && ['m', `toggle menu`],\n    ['d', `show developer tools`],\n    ['shift+d', `toggle auto opening developer tools on startup`, currentToggle],\n    [],\n  ]);\n};\n\nfunction logCommandsTable(ui: (false | string[])[]) {\n  Log.nested(\n    ui\n      .filter(Boolean)\n      // @ts-ignore: filter doesn't work\n      .map(([key, message, status]) => {\n        if (!key) return '';\n        let view = ` ${BLT} `;\n        if (key.length === 1) view += 'Press ';\n        view += `${b(key)} ${div} `;\n        view += message;\n        // let view = ` ${BLT} Press ${b(key)} ${div} ${message}`;\n        if (status) {\n          view += ` ${chalk.dim(`(${i(status)})`)}`;\n        }\n        return view;\n      })\n      .join('\\n')\n  );\n}\n\nconst printServerInfo = async (\n  projectRoot: string,\n  options: Pick<StartOptions, 'webOnly' | 'isWebSocketsEnabled' | 'isRemoteReloadingEnabled'> = {}\n) => {\n  if (options.webOnly) {\n    Webpack.printConnectionInstructions(projectRoot);\n    printHelp();\n    return;\n  }\n  Log.newLine();\n  const wrapLength = process.stdout.columns || 80;\n  const item = (text: string): string => ` ${BLT} ` + wrapAnsi(text, wrapLength).trimStart();\n  const url = await UrlUtils.constructDeepLinkAsync(projectRoot);\n\n  urlOpts.printQRCode(url);\n  Log.nested(item(`Waiting on ${u(url)}`));\n  // Log.newLine();\n  // TODO: if dev client, change this message!\n  Log.nested(item(`Scan the QR code above with Expo Go (Android) or the Camera app (iOS)`));\n\n  await printBasicUsageAsync(options);\n  Webpack.printConnectionInstructions(projectRoot);\n  printHelp();\n  Log.addNewLineIfNone();\n};\n\nexport function openDeveloperTools(url: string) {\n  Log.log(`Opening developer tools in the browser...`);\n  if (!openBrowser(url)) {\n    Log.warn(`Unable to open developer tools in the browser`);\n  }\n}\n\nexport async function startAsync(projectRoot: string, options: StartOptions) {\n  const { stdin } = process;\n  const startWaitingForCommand = () => {\n    if (!stdin.setRawMode) {\n      Log.warn(\n        'Non-interactive terminal, keyboard commands are disabled. Please upgrade to Node 12+'\n      );\n      return;\n    }\n    stdin.setRawMode(true);\n    stdin.resume();\n    stdin.setEncoding('utf8');\n    stdin.on('data', handleKeypress);\n  };\n\n  const stopWaitingForCommand = () => {\n    stdin.removeListener('data', handleKeypress);\n    if (!stdin.setRawMode) {\n      Log.warn(\n        'Non-interactive terminal, keyboard commands are disabled. Please upgrade to Node 12+'\n      );\n      return;\n    }\n    stdin.setRawMode(false);\n    stdin.resume();\n  };\n\n  startWaitingForCommand();\n\n  Prompts.addInteractionListener(({ pause }) => {\n    if (pause) {\n      stopWaitingForCommand();\n    } else {\n      startWaitingForCommand();\n    }\n  });\n\n  UserManager.setInteractiveAuthenticationCallback(async () => {\n    stopWaitingForCommand();\n    try {\n      return await loginOrRegisterIfLoggedOutAsync();\n    } finally {\n      startWaitingForCommand();\n    }\n  });\n\n  await printServerInfo(projectRoot, options);\n\n  async function handleKeypress(key: string) {\n    const shouldPrompt = !options.nonInteractive && ['I', 'A'].includes(key);\n    if (shouldPrompt) {\n      Log.clear();\n    }\n    switch (key) {\n      case 'A':\n      case 'a':\n        if (options.webOnly && !Webpack.isTargetingNative()) {\n          Log.log(`${BLT} Opening the web project in Chrome on Android...`);\n          const results = await Android.openWebProjectAsync({\n            projectRoot,\n            shouldPrompt,\n          });\n          if (!results.success) {\n            Log.nestedError(results.error);\n          }\n        } else {\n          Log.log(`${BLT} Opening on Android...`);\n          const results = await Android.openProjectAsync({\n            projectRoot,\n            shouldPrompt,\n            devClient: options.devClient ?? false,\n          });\n          if (!results.success && results.error !== 'escaped') {\n            Log.nestedError(\n              typeof results.error === 'string' ? results.error : results.error.message\n            );\n          }\n        }\n        printHelp();\n        break;\n      case 'I':\n      case 'i':\n        if (options.webOnly && !Webpack.isTargetingNative()) {\n          Log.log(`${BLT} Opening the web project in Safari on iOS...`);\n          const results = await Simulator.openWebProjectAsync({\n            projectRoot,\n            shouldPrompt,\n          });\n          if (!results.success) {\n            Log.nestedError(results.error);\n          }\n        } else {\n          Log.log(`${BLT} Opening on iOS...`);\n          const results = await Simulator.openProjectAsync({\n            projectRoot,\n            shouldPrompt,\n            devClient: options.devClient ?? false,\n          });\n          if (!results.success && results.error !== 'escaped') {\n            Log.nestedError(results.error);\n          }\n        }\n        printHelp();\n        break;\n    }\n\n    switch (key) {\n      case CTRL_C:\n      case CTRL_D: {\n        // @ts-ignore: Argument of type '\"SIGINT\"' is not assignable to parameter of type '\"disconnect\"'.\n        process.emit('SIGINT');\n        // Prevent terminal UI from accepting commands while the process is closing.\n        // Without this, fast typers will close the server then start typing their\n        // next command and have a bunch of unrelated things pop up.\n        Prompts.pauseInteractions();\n        break;\n      }\n      case CTRL_L: {\n        Log.clear();\n        break;\n      }\n      case '?': {\n        await printUsageAsync(projectRoot, options);\n        break;\n      }\n      case 'w': {\n        Log.log(`${BLT} Open in the web browser...`);\n        await Webpack.openAsync(projectRoot);\n        await printServerInfo(projectRoot, options);\n        break;\n      }\n      case 'c': {\n        Log.clear();\n        await printServerInfo(projectRoot, options);\n        break;\n      }\n      case 'd': {\n        const { devToolsPort } = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n        openDeveloperTools(`http://localhost:${devToolsPort}`);\n        printHelp();\n        break;\n      }\n      case 'D': {\n        const enabled = !(await shouldOpenDevToolsOnStartupAsync());\n        await UserSettings.setAsync('openDevToolsAtStartup', enabled);\n        const currentToggle = enabled ? 'enabled' : 'disabled';\n        Log.log(`Auto opening developer tools on startup: ${chalk.bold(currentToggle)}`);\n        logCommandsTable([['d', `show developer tools now`]]);\n        break;\n      }\n      case 'm': {\n        if (options.isWebSocketsEnabled) {\n          Log.log(`${BLT} Toggling dev menu`);\n          Project.broadcastMessage('devMenu');\n        }\n        break;\n      }\n      case 'M': {\n        if (options.isWebSocketsEnabled) {\n          Prompts.pauseInteractions();\n          try {\n            const value = await selectAsync({\n              // Options match: Chrome > View > Developer\n              message: `Dev tools ${chalk.dim`(native only)`}`,\n              choices: [\n                { title: 'Inspect elements', value: 'toggleElementInspector' },\n                { title: 'Toggle performance monitor', value: 'togglePerformanceMonitor' },\n                { title: 'Toggle developer menu', value: 'toggleDevMenu' },\n                { title: 'Reload app', value: 'reload' },\n                // TODO: Maybe a \"View Source\" option to open code.\n                // Toggling Remote JS Debugging is pretty rough, so leaving it disabled.\n                // { title: 'Toggle Remote Debugging', value: 'toggleRemoteDebugging' },\n              ],\n            });\n            Project.broadcastMessage('sendDevCommand', { name: value });\n          } catch {\n            // do nothing\n          } finally {\n            Prompts.resumeInteractions();\n            printHelp();\n          }\n        }\n        break;\n      }\n      case 'p': {\n        Log.clear();\n        const projectSettings = await ProjectSettings.readAsync(projectRoot);\n        const dev = !projectSettings.dev;\n        await ProjectSettings.setAsync(projectRoot, { dev, minify: !dev });\n        Log.log(\n          `Metro bundler is now running in ${chalk.bold(\n            dev ? 'development' : 'production'\n          )}${chalk.reset(` mode.`)}\nPlease reload the project in Expo Go for the change to take effect.`\n        );\n        printHelp();\n        break;\n      }\n      case 'r':\n        if (options.isRemoteReloadingEnabled) {\n          Log.log(`${BLT} Reloading apps`);\n          // Send reload requests over the dev servers\n          Project.broadcastMessage('reload');\n\n          Webpack.broadcastMessage('reload');\n        } else if (!options.webOnly) {\n          // [SDK 40]: Restart bundler\n          Log.clear();\n          Project.startAsync(projectRoot, { ...options, reset: false });\n          Log.log('Restarting Metro bundler...');\n        }\n        break;\n      case 'R':\n        if (!options.isRemoteReloadingEnabled) {\n          // [SDK 40]: Restart bundler with cache\n          Log.clear();\n          Project.startAsync(projectRoot, { ...options, reset: true });\n          Log.log('Restarting Metro bundler and clearing cache...');\n        }\n        break;\n      case 'o':\n        Log.log(`${BLT} Opening the editor...`);\n        await openInEditorAsync(projectRoot);\n    }\n  }\n}\n"],"file":"TerminalUI.js"}