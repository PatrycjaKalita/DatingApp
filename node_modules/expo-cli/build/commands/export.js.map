{"version":3,"sources":["../../src/commands/export.ts"],"names":["collect","val","memo","push","program","command","description","helpGroup","option","checkConfig"],"mappings":";;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEA,SAASA,OAAT,CAAoBC,GAApB,EAA4BC,IAA5B,EAA4C;AAC1CA,EAAAA,IAAI,CAACC,IAAL,CAAUF,GAAV;AACA,SAAOC,IAAP;AACD;;AAEc,kBAAUE,OAAV,EAA4B;AACzC,sDACEA,OAAO,CACJC,OADH,CACW,eADX,EAEGC,WAFH,CAEe,mEAFf,EAGGC,SAHH,CAGa,MAHb,EAIGC,MAJH,CAKI,wBALJ,EAMI,4DANJ,EAQGA,MARH,CAQU,aARV,EAQyB,+BARzB,EASGA,MATH,CAUI,oBAVJ,EAWI,0EAXJ,EAYI,MAZJ,EAcGA,MAdH,CAeI,uBAfJ,EAgBI,oIAhBJ,EAiBI,UAjBJ,EAmBGA,MAnBH,CAmBU,qBAnBV,EAmBiC,4CAnBjC,EAoBGA,MApBH,CAoBU,OApBV,EAoBmB,wEApBnB,EAqBGA,MArBH,CAqBU,sBArBV,EAqBkC,kDArBlC,EAsBGA,MAtBH,CAsBU,aAtBV,EAsByB,0BAtBzB,EAuBGA,MAvBH,CAwBI,6BAxBJ,EAyBI,uDAzBJ,EA2BGA,MA3BH,CA2BU,uBA3BV,EA2BmC,sCA3BnC,EA2B2ER,OA3B3E,EA2BoF,EA3BpF,EA4BGQ,MA5BH,CA6BI,uBA7BJ,EA8BI,kDA9BJ,EA+BIR,OA/BJ,EAgCI,EAhCJ,EAkCGQ,MAlCH,CAkCU,qBAlCV,EAkCiC,kDAlCjC,EAmCGA,MAnCH,CAmCU,uBAnCV,EAmCmC,0CAnCnC,CADF,EAqCE,mEAAa,eAAb,GArCF,EAsCE;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAtCF;AAwCD","sourcesContent":["import type { Command } from 'commander';\n\nimport { applyAsyncActionProjectDir } from './utils/applyAsyncAction';\n\nfunction collect<T>(val: T, memo: T[]): T[] {\n  memo.push(val);\n  return memo;\n}\n\nexport default function (program: Command) {\n  applyAsyncActionProjectDir(\n    program\n      .command('export [path]')\n      .description('Export the static files of the app for hosting it on a web server')\n      .helpGroup('core')\n      .option(\n        '-p, --public-url <url>',\n        'The public url that will host the static files. (Required)'\n      )\n      .option('-c, --clear', 'Clear the Metro bundler cache')\n      .option(\n        '--output-dir <dir>',\n        'The directory to export the static files to. Default directory is `dist`',\n        'dist'\n      )\n      .option(\n        '-a, --asset-url <url>',\n        \"The absolute or relative url that will host the asset files. Default is './assets', which will be resolved against the public-url.\",\n        './assets'\n      )\n      .option('-d, --dump-assetmap', 'Dump the asset map for further processing.')\n      .option('--dev', 'Configure static files for developing locally using a non-https server')\n      .option('-s, --dump-sourcemap', 'Dump the source map for debugging the JS bundle.')\n      .option('-q, --quiet', 'Suppress verbose output.')\n      .option(\n        '-t, --target <managed|bare>',\n        'Target environment for which this export is intended.'\n      )\n      .option('--merge-src-dir <dir>', 'A repeatable source dir to merge in.', collect, [])\n      .option(\n        '--merge-src-url <url>',\n        'A repeatable source tar.gz file URL to merge in.',\n        collect,\n        []\n      )\n      .option('--max-workers <num>', 'Maximum number of tasks to allow Metro to spawn.')\n      .option('--experimental-bundle', 'export bundles for use with EAS updates.'),\n    () => import('./exportAsync'),\n    { checkConfig: true }\n  );\n}\n"],"file":"export.js"}