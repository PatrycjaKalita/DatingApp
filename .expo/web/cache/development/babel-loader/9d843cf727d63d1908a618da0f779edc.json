{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\FindLove\\\\src\\\\scenes\\\\loginForm\\\\LoginForm.js\";\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Snackbar } from 'react-native-paper';\nimport { colors, images } from \"../../theme\";\nimport Button from \"../../components/Button\";\nimport styles from \"./Style\";\n\nvar LoginForm = function LoginForm(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      login = _useState2[0],\n      setLogin = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var storeData = function storeData() {\n    return _regeneratorRuntime.async(function storeData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('login', 'true'));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error');\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var checkLogin = function checkLogin() {\n    if (login && password) {\n      if (login === 'user' && password === 'user') {\n        storeData().then(function () {\n          navigation.navigate('Matches');\n        });\n      }\n\n      if (login === 'admin' && password === 'admin') {\n        storeData().then(function () {\n          navigation.navigate('Details');\n        });\n      }\n    } else {\n      setVisible(true);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: images.background_hearts,\n    resizeMode: \"cover\",\n    style: {\n      alignItems: 'center',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Snackbar, {\n    visible: visible,\n    onDismiss: onDismissSnackBar,\n    style: {\n      backgroundColor: colors.darkPink\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Login or Password is incorrect.\"), React.createElement(View, {\n    style: styles.contentLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.tinyLogo,\n    source: images.cats,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Find love!\")), React.createElement(View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.inputTopText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Login:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"user\",\n    onChangeText: setLogin,\n    value: login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.inputTopText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Password:\"), React.createElement(TextInput, {\n    secureTextEntry: true,\n    placeholder: \"****\",\n    style: styles.input,\n    onChangeText: setPassword,\n    value: password,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    title: \"Log In\",\n    color: \"white\",\n    style: styles.button,\n    backgroundColor: colors.darkPink,\n    onPress: function onPress() {\n      return checkLogin();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"If you want to join us\"), React.createElement(Text, {\n    style: styles.signUp,\n    onPress: function onPress() {\n      navigation.navigate('SignUpForm', {\n        from: 'LoginForm'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"))));\n};\n\nLoginForm.propTypes = {\n  route: PropTypes.shape({\n    params: PropTypes.shape({\n      from: PropTypes.string\n    })\n  }),\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n    goBack: PropTypes.func\n  })\n};\nLoginForm.defaultProps = {\n  route: {\n    params: {\n      from: ''\n    }\n  },\n  navigation: {\n    goBack: function goBack() {\n      return null;\n    }\n  }\n};\nexport default LoginForm;","map":{"version":3,"sources":["D:/FindLove/src/scenes/loginForm/LoginForm.js"],"names":["React","useState","PropTypes","TextInput","AsyncStorage","Snackbar","colors","images","Button","styles","LoginForm","navigation","login","setLogin","password","setPassword","visible","setVisible","onDismissSnackBar","storeData","setItem","console","log","checkLogin","then","navigate","root","background_hearts","alignItems","flex","backgroundColor","darkPink","contentLogo","tinyLogo","cats","title","content","inputTopText","input","button","text","signUp","from","propTypes","route","shape","params","string","func","isRequired","goBack","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Text, View, Image, ImageBackground,\n} from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { Snackbar } from 'react-native-paper'\nimport { colors, images } from '../../theme'\nimport Button from '../../components/Button'\n\n// Styles for this screen\nimport styles from './Style'\n\nconst LoginForm = ({ navigation }) => {\n  const [login, setLogin] = useState('')\n  const [password, setPassword] = useState('')\n  const [visible, setVisible] = React.useState(false)\n\n  const onDismissSnackBar = () => setVisible(false)\n\n  const storeData = async () => {\n    try {\n      await AsyncStorage.setItem('login', 'true')\n    } catch (e) {\n      console.log('error')\n    }\n  }\n\n  const checkLogin = () => {\n    if (login && password) {\n      if ((login === 'user') && (password === 'user')) {\n        storeData()\n          .then(() => {\n            navigation.navigate('Matches')\n          })\n      }\n      if ((login === 'admin') && (password === 'admin')) {\n        storeData()\n          .then(() => {\n            navigation.navigate('Details')\n          })\n      }\n    } else {\n      setVisible(true)\n    }\n  }\n\n  return (\n    <View style={styles.root}>\n      <ImageBackground\n        source={images.background_hearts}\n        resizeMode=\"cover\"\n        style={{\n          alignItems: 'center',\n          flex: 1,\n        }}\n      >\n        <Snackbar\n          visible={visible}\n          onDismiss={onDismissSnackBar}\n          style={{ backgroundColor: colors.darkPink }}\n        >\n          Login or Password is incorrect.\n        </Snackbar>\n        <View style={styles.contentLogo}>\n          <Image style={styles.tinyLogo} source={images.cats} />\n          <Text style={styles.title}>Find love!</Text>\n        </View>\n        <View style={styles.content}>\n          <Text style={styles.inputTopText}>Login:</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"user\"\n            onChangeText={setLogin}\n            value={login}\n          />\n        </View>\n        <View>\n          <Text style={styles.inputTopText}>Password:</Text>\n          <TextInput\n            secureTextEntry\n            placeholder=\"****\"\n            style={styles.input}\n            onChangeText={setPassword}\n            value={password}\n          />\n        </View>\n        <Button\n          title=\"Log In\"\n          color=\"white\"\n          style={styles.button}\n          backgroundColor={colors.darkPink}\n          onPress={() => checkLogin()}\n        />\n        <View>\n          <Text\n            style={styles.text}\n          >If you want to join us\n          </Text>\n          <Text\n            style={styles.signUp}\n            onPress={() => {\n              navigation.navigate('SignUpForm', { from: 'LoginForm' })\n            }}\n          >Sign Up\n          </Text>\n        </View>\n      </ImageBackground>\n    </View>\n  )\n}\n\nLoginForm.propTypes = {\n  route: PropTypes.shape({\n    params: PropTypes.shape({ from: PropTypes.string }),\n  }),\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n    goBack: PropTypes.func,\n  }),\n}\n\nLoginForm.defaultProps = {\n  route: { params: { from: '' } },\n  navigation: { goBack: () => null },\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}